{
    "version": "https://jsonfeed.org/version/1",
    "title": "AFGXF's Blog • All posts by \"noip普及/csp-j\" tag",
    "description": "",
    "home_page_url": "https://afgxf.github.io",
    "items": [
        {
            "id": "https://afgxf.github.io/2020/04/28/p5661-gong-jiao-huan-cheng-ti-jie/",
            "url": "https://afgxf.github.io/2020/04/28/p5661-gong-jiao-huan-cheng-ti-jie/",
            "title": "P5661 公交换乘 题解",
            "date_published": "2020-04-28T00:32:46.000Z",
            "content_html": "<p>那这就很厉害了<br><a href=\"https://www.luogu.com.cn/record/33168573\">R33168573 记录详情</a></p>\n<span id=\"more\"></span>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>维护一个100005大小的栈<code>S</code>,结构<code>transfer&#123;p,t,used&#125;</code></p>\n<ul>\n<li>输入<code>n</code></li>\n<li>循环如下<ul>\n<li>输入<code>type,price,time</code></li>\n<li>如果是地铁<ul>\n<li><code>ans+=price;</code></li>\n<li><code>Push(S,&#123;price,time&#125;);</code></li>\n</ul>\n</li>\n<li>如果是公交<ul>\n<li>指针<code>tick=NULL</code>;</li>\n<li>从<code>max(0,S.top-45)</code>循环到<code>S.top</code><ul>\n<li>如果<code>OK(S[i])</code><ul>\n<li><code>tick=&amp;S[i];</code></li>\n<li><code>S[i].used=true</code></li>\n<li><code>break;</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>如果<code>tick==NULL</code><ul>\n<li><code>ans+=price;</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>输出<code>ans;</code><blockquote>\n<p>talk is cheap and show me the code.</p>\n</blockquote>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">transfer</span> &#123;</span></span><br><span class=\"line\">  <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> p, t;</span><br><span class=\"line\">  <span class=\"keyword\">bool</span> used;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">transfer S[<span class=\"number\">100005</span>] = &#123;<span class=\"number\">0</span>&#125;;<span class=\"comment\">//栈,只压不弹</span></span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> top = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> transfer null = &#123;<span class=\"number\">-1</span>, <span class=\"number\">-1</span>, <span class=\"number\">0</span>&#125;;<span class=\"comment\">//这样比较方便判定</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Push</span><span class=\"params\">(transfer S[], transfer t)</span> </span>&#123;</span><br><span class=\"line\">  S[top] = t;</span><br><span class=\"line\">  top++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//条件判断</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">OK</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> &amp;n, <span class=\"keyword\">const</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> &amp;p, <span class=\"keyword\">const</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> &amp;t)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (S[n].used || S[n].p &lt; p || t - S[n].t &gt; <span class=\"number\">45</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//只能单独写一个了</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">select</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (top - <span class=\"number\">45</span> &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> top - <span class=\"number\">45</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">long</span> n;</span><br><span class=\"line\">  <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">  cin &gt;&gt; n;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">long</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> type, p, t;</span><br><span class=\"line\">    cin &gt;&gt; type &gt;&gt; p &gt;&gt; t;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (type == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> transfer *trans = &amp;null;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> j = <span class=\"built_in\">select</span>(); j &lt; top; j++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">OK</span>(j, p, t)) &#123;</span><br><span class=\"line\">          trans = &amp;S[j];</span><br><span class=\"line\">          S[j].used = <span class=\"literal\">true</span>;</span><br><span class=\"line\">          <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (trans == &amp;null) &#123;<span class=\"comment\">//如果未找到符合条件的票</span></span><br><span class=\"line\">        ans += p;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      transfer tmp = &#123;p, t, <span class=\"literal\">false</span>&#125;;<span class=\"comment\">//这里可以删掉</span></span><br><span class=\"line\">      <span class=\"built_in\">Push</span>(S, tmp);                <span class=\"comment\">//然后这里Push(S,(transfer)&#123;p,t,false&#125;);</span></span><br><span class=\"line\">      ans += p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  cout &lt;&lt; ans;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h2></li>\n</ul>\n<p>关于这个算法的复杂度,我想说:$O(45n)$.</p>\n<p>说多了都是泪啊.</p>\n<p>具体可以看<a href=\"https://www.luogu.com.cn/discuss/show/212582\">这个</a>和<a href=\"https://www.luogu.com.cn/discuss/show/213648\">这个</a></p>\n",
            "tags": [
                "笔记",
                "题解",
                "洛谷",
                "NOIP普及/CSP-J"
            ]
        }
    ]
}